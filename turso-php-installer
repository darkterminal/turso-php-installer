#!/usr/bin/env php
<?php

use Darkterminal\TursoLibSQLInstaller\Services\TenancyForLaravel\TenancyForLaravelProvider;
use Darkterminal\TursoLibSQLInstaller\TursoLibSQLInstaller;

ini_set('display_errors', false);
if (file_exists(__DIR__.'/../../autoload.php')) {
    require __DIR__.'/../../autoload.php';
} else {
    require __DIR__.'/vendor/autoload.php';
}

$app = new TursoLibSQLInstaller();

$hero = <<<LOGO
_ _ _    ____   ___  _       ____  _   _ ____    ___           _        _ _           
| (_) |__/ ___| / _ \| |     |  _ \| | | |  _ \  |_ _|_ __  ___| |_ __ _| | | ___ _ __ 
| | | '_ \___ \| | | | |     | |_) | |_| | |_) |  | || '_ \/ __| __/ _` | | |/ _ \ '__|
| | | |_) |__) | |_| | |___  |  __/|  _  |  __/   | || | | \__ \ || (_| | | |  __/ |   
|_|_|_.__/____/ \__\_\_____| |_|   |_| |_|_|     |___|_| |_|___/\__\__,_|_|_|\___|_|   
LOGO;

echo "$hero\n";
echo PHP_EOL;

$command = $argv[1] ?? null;

$autoConfirm = false;
$specifiedVersion = null;

foreach ($argv as $arg) {
    if ($arg === '-y') {
        $autoConfirm = true;
    } elseif (strpos($arg, '--version=') === 0) {
        $specifiedVersion = substr($arg, strlen('--version='));
    }
}

match ($command) {
    'help'      => $app->help(),
    'install'   => $app->install($autoConfirm, $specifiedVersion),
    'update'    => $app->update(),
    'uninstall' => $app->uninstall(),
    'add:tenancy-for-laravel' => (new TenancyForLaravelProvider(getcwd()))->installTenancy(),
    default     => $app->help(),
};
